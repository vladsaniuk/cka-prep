apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-deployment
spec:
  selector:
    matchLabels:
      app: kong
  replicas: 1
  template:
    metadata:
      labels:
        app: kong
    spec:
      serviceAccountName: aws-lbc-sa
      automountServiceAccountToken: false
      containers:
      - name: kong
        image: vladsanyuk/kong:3.4.1.1-1710001318-69
        volumeMounts:
          - mountPath: /tmp
            name: shared-tmp-storage
        ports:
        - containerPort: 8000
          name: proxy-http
        - containerPort: 8443
          name: proxy-https
        - containerPort: 8001
          name: admin-api-http
        - containerPort: 8444
          name: admin-api-https
        - containerPort: 8002
          name: admin-ui-http
        - containerPort: 8445
          name: admin-ui-https
        env:
          - name: KONG_DATABASE
            value: postgres
          - name: KONG_PG_HOST
            value: postgres-service
          - name: KONG_PG_USER
            valueFrom:
              secretKeyRef:
                name: postgres-secrets
                key: username
          - name: KONG_PG_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-secrets
                key: password
          - name: KONG_PROXY_ACCESS_LOG
            value: /dev/stdout
          - name: KONG_ADMIN_ACCESS_LOG
            value: /dev/stdout
          - name: KONG_PROXY_ERROR_LOG
            value: /dev/stderr
          - name: KONG_ADMIN_ERROR_LOG
            value: /dev/stderr
          - name: KONG_ADMIN_LISTEN
            value: 0.0.0.0:8001 reuseport backlog=16384, 0.0.0.0:8444 http2 ssl reuseport backlog=16384
          - name: KONG_SSL_PROTOCOLS
            value: "TLSv1.2 TLSv1.3"
          - name: KONG_SSL_CERT
            value: /opt/certs/kong.crt
          - name: KONG_SSL_CERT_KEY
            value: /opt/certs/kong.key
          - name: KONG_ADMIN_GUI_SSL_CERT
            value: /opt/certs/kong.crt
          - name: KONG_ADMIN_GUI_SSL_CERT_KEY
            value: /opt/certs/kong.key
          - name: KONG_ADMIN_GUI_URL
            value: https://localhost:8445
          - name: KONG_ADMIN_GUI_API_URL
            value: https://localhost:8444
          - name: KONG_LOG_LEVEL
            value: info
          - name: KONG_PLUGINS
            value: bundled,easter_egg
      - name: troubleshooting-busybox
        image: busybox:latest
        command: ["sh", "-c", "sleep 60000"]
        volumeMounts:
          - mountPath: /tmp
            name: shared-tmp-storage
      - name: troubleshooting-curl
        image: curlimages/curl
        command: ["sh", "-c", "sleep 60000"]
        volumeMounts:
          - mountPath: /tmp
            name: shared-tmp-storage
      - name: troubleshooting-aws-cli
        image: public.ecr.aws/aws-cli/aws-cli
        command: ["sh", "-c", "sleep 60000"]
        volumeMounts:
          - mountPath: /tmp
            name: shared-tmp-storage
      initContainers:
      - name: is-db-available
        image: busybox:latest
        command: ["sh", "-c", "for try in $(seq 0 360); do echo \"Check DB availability, try #$try\"; nslookup postgres-service.load-balancer-controller.svc.cluster.local; if [ $? -eq 0 ]; then exit 0; fi; sleep 1; done"]
      - name: kong-migrations-bootstrap
        image: vladsanyuk/kong:3.4.1.1-1710001318-69
        command: ["kong", "migrations", "bootstrap"]
        env:
          - name: KONG_DATABASE
            value: postgres
          - name: KONG_PG_HOST
            value: postgres-service
          - name: KONG_PG_USER
            valueFrom:
              secretKeyRef:
                name: postgres-secrets
                key: username
          - name: KONG_PG_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-secrets
                key: password
          - name: KONG_LOG_LEVEL
            value: info
          - name: KONG_PLUGINS
            value: bundled,easter_egg
      - name: kong-migrations-up
        image: vladsanyuk/kong:3.4.1.1-1710001318-69
        command: ["sh", "-c", "sleep 10 && kong migrations up && kong migrations finish"]
        env:
          - name: KONG_DATABASE
            value: postgres
          - name: KONG_PG_HOST
            value: postgres-service
          - name: KONG_PG_USER
            valueFrom:
              secretKeyRef:
                name: postgres-secrets
                key: username
          - name: KONG_PG_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-secrets
                key: password
          - name: KONG_LOG_LEVEL
            value: info
          - name: KONG_PLUGINS
            value: bundled,easter_egg
      volumes:
        - name: shared-tmp-storage
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: kong-service
spec:
  selector:
    app: kong
  ports:
    - name: proxy-http
      protocol: TCP
      port: 8000
      targetPort: 8000
    - name: proxy-https
      protocol: TCP
      port: 8443
      targetPort: 8443
    - name: admin-api-http
      protocol: TCP
      port: 8001
      targetPort: 8001
    - name: admin-api-https
      protocol: TCP
      port: 8444
      targetPort: 8444
    - name: admin-ui-http
      protocol: TCP
      port: 8002
      targetPort: 8002
    - name: admin-ui-https
      protocol: TCP
      port: 8445
      targetPort: 8445
  type: NodePort